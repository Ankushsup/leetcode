#include<iostream>
using namespace std;

/*C++ Function to print leaders in an array */
void printLeaders(int arr[], int size)
{
 for (int i = 0; i < size; i++)
 {
  int j;
  for (j = i+1; j < size; j++)
  {
   if (arr[i] <=arr[j])
    break;
  }
  if (j == size) // the loop didn't break
   cout << arr[i] << " ";
}
}

/* Driver program to test above function */
int main()
{
 int arr[] = {16, 17, 4, 3, 5, 2};
 int n = sizeof(arr)/sizeof(arr[0]);
 printLeaders(arr, n);
 return 0;
}


*java

class LeadersInArray
{
 /*Java Function to print leaders in an array */
 void printLeaders(int arr[], int size)
 {
  for (int i = 0; i < size; i++)
  {
   int j;
   for (j = i + 1; j < size; j++)
   {
    if (arr[i] <=arr[j])
     break;
   }
   if (j == size) // the loop didn't break
    System.out.print(arr[i] + " ");
  }
 }

 /* Driver program to test above functions */
 public static void main(String[] args)
 {
  LeadersInArray lead = new LeadersInArray();
  int arr[] = new int[]{16, 17, 4, 3, 5, 2};
  int n = arr.length;
  lead.printLeaders(arr, n);
 }
}



//vector

class Solution{
    //Function to find the leaders in the array.
    public:
    vector<int> leaders(int a[], int n)
    {
        // Code here
        vector<int> ans;
        int l = a[n-1];
        for(int i=n-1;i>=0;i--)
        {
            if(a[i] >= l)
            {
                l=a[i];
                ans.push_back(a[i]);
            }
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};



